# *****PROBLEM*****

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# *****PROBLEM*****

def even_fibonacci_sum(max_value)
	first_num = 1
	second_num = 2
	new_num = 0
	fibonacci_nums = [first_num, second_num]

	while first_num + second_num < max_value
		new_num = first_num + second_num
		fibonacci_nums.push(new_num)
		first_num = second_num
		second_num = new_num
	end

	sum_of_even_nums = 0
	fibonacci_nums.each do |num|
		if num % 2 == 0
			sum_of_even_nums += num
		end
	end

	sum_of_even_nums
end

puts even_fibonacci_sum(4000000)